(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     85642,       1829]
NotebookOptionsPosition[     82733,       1725]
NotebookOutlinePosition[     83075,       1740]
CellTagsIndexPosition[     83032,       1737]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Uncertainty propagation", "Title",
 CellChangeTimes->{{3.532194696506785*^9, 3.5321947429594417`*^9}, {
  3.5372825163453207`*^9, 3.5372825266799116`*^9}}],

Cell[TextData[{
 "An example of using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s symbolic math capabilities in experimental physics."
}], "Subtitle",
 CellChangeTimes->{{3.5372825306801405`*^9, 3.5372825582397165`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Definition of the error propagation function\
\>", "Section",
 CellChangeTimes->{{3.532195879393442*^9, 3.5321958823946133`*^9}, 
   3.532195975387933*^9, {3.5372787998947515`*^9, 3.5372788065861344`*^9}, {
   3.5372825765307627`*^9, 3.537282581693058*^9}}],

Cell[CellGroupData[{

Cell["\<\
General formula for propagating uncorrelated errors...\
\>", "Subsection",
 CellChangeTimes->{{3.5372826019752183`*^9, 3.537282631709919*^9}, {
  3.5372835071919937`*^9, 3.537283509265112*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "z", "2"], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", "z"}], 
         RowBox[{"\[PartialD]", "a"}]], ")"}], "2"], 
      SubsuperscriptBox["\[Sigma]", "a", "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", "z"}], 
         RowBox[{"\[PartialD]", "b"}]], ")"}], "2"], 
      SubsuperscriptBox["\[Sigma]", "b", "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", "z"}], 
         RowBox[{"\[PartialD]", "c"}]], ")"}], "2"], 
      SubsuperscriptBox["\[Sigma]", "c", "2"]}], "+", "\[Ellipsis]"}]}],
   "MathMLPresentationTag",
   AutoDelete->True], TraditionalForm]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Function definition and list of the input variables\
\>", "Subsection",
 CellChangeTimes->{{3.537282585824294*^9, 3.5372825936547422`*^9}, {
  3.537283539611848*^9, 3.537283546226226*^9}}],

Cell[TextData[{
 StyleBox["expr",
  FontWeight->"Bold"],
 " is the symbolic equation which calculates the derived quantity\n",
 StyleBox["measVars",
  FontWeight->"Bold"],
 " is a list of the measured quantities which have uncertainty needing to \
propagate\n",
 StyleBox["measVarsError",
  FontWeight->"Bold"],
 " is a list of the uncertainties in the variables.  This list can either be \
symbolic or numeric."
}], "Text",
 CellChangeTimes->{{3.537277720829033*^9, 3.5372777728590083`*^9}, {
  3.5372778146553993`*^9, 3.5372778593539557`*^9}, {3.5372779092468095`*^9, 
  3.537277928909934*^9}}],

Cell["\<\
The Module function allows you to create local variables inside the function \
definition, which is useful for writing complicated functions that have \
intermediate steps.\
\>", "Text",
 CellChangeTimes->{{3.5372826965436273`*^9, 3.5372827496816664`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorPropagateVariance", "[", 
   RowBox[{"derivedExpr_", ",", " ", "measVars_", ",", "measVarsError_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], 
      RowBox[{"Length", "[", "measVars", "]"}]], 
     SuperscriptBox[
      RowBox[{"Abs", "[", " ", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"derivedExpr", ",", 
          RowBox[{"measVars", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], "*", 
        RowBox[{"measVarsError", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], "2"]}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5372779940436597`*^9, 3.537277994307675*^9}, {
  3.5372780345619774`*^9, 3.537278063587637*^9}, {3.537278129977434*^9, 
  3.537278263667081*^9}, {3.53727851331236*^9, 3.537278520696782*^9}, {
  3.5372816808295317`*^9, 3.537281692241184*^9}, {3.537282676468479*^9, 
  3.5372826851569757`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytic Examples", "Section",
 CellChangeTimes->{{3.5372788178497787`*^9, 3.5372788235181026`*^9}, 
   3.537279007938651*^9}],

Cell[CellGroupData[{

Cell["Simple examples", "Subsection",
 CellChangeTimes->{{3.5372789276070566`*^9, 3.537278935031481*^9}, {
  3.5372789756388035`*^9, 3.5372789776829205`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"errorPropagateVariance", "[", 
  RowBox[{
   RowBox[{"a", "+", "b"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]a", ",", " ", "\[Delta]b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5372789359495335`*^9, 3.537278987363474*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", "\[Delta]a", "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "\[Delta]b", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.5372789586588326`*^9, 3.537278988021512*^9}, 
   3.5372827580581455`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"errorPropagateVariance", "[", 
  RowBox[{
   RowBox[{"a", "-", "b"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]a", ",", " ", "\[Delta]b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5372789359495335`*^9, 3.53727899271778*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", "\[Delta]a", "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", "\[Delta]b", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.5372789586588326`*^9, 3.537278992958794*^9}, 
   3.537282758871192*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"errorPropagateVariance", "[", 
  RowBox[{
   RowBox[{"a", "*", "b"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]a", ",", " ", "\[Delta]b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5372789359495335`*^9, 3.5372789986091175`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"b", " ", "\[Delta]a"}], "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"a", " ", "\[Delta]b"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.5372789586588326`*^9, 3.5372789990241413`*^9}, 
   3.5372827595152287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"errorPropagateVariance", "[", 
  RowBox[{
   RowBox[{"a", "/", "b"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]a", ",", " ", "\[Delta]b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5372789359495335`*^9, 3.5372789705015097`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    FractionBox["\[Delta]a", "b"], "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    FractionBox[
     RowBox[{"a", " ", "\[Delta]b"}], 
     SuperscriptBox["b", "2"]], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.5372789586588326`*^9, 3.537278970737523*^9}, 
   3.5372790013652754`*^9, 3.537282760122264*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fancy Examples", "Subsection",
 CellChangeTimes->{{3.5372790111128325`*^9, 3.5372790185022554`*^9}}],

Cell["\<\
This example comes from the diffraction equation from a grating: \
\>", "Text",
 CellChangeTimes->{{3.5372794028092365`*^9, 3.537279434079025*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{
    RowBox[{"a", "(", 
     RowBox[{
      RowBox[{
       StyleBox["sin",
        FontFamily->"Times",
        FontWeight->"Plain",
        FontSlant->"Plain"], "\[InvisibleApplication]", 
       SubscriptBox["\[Theta]", 
        RowBox[{"r", ",", "n"}]]}], "-", 
      RowBox[{
       StyleBox["sin",
        FontFamily->"Times",
        FontWeight->"Plain",
        FontSlant->"Plain"], "\[InvisibleApplication]", 
       SubscriptBox["\[Theta]", "i"]}]}], ")"}], "=", 
    RowBox[{"n", "\[Lambda]"}]}],
   "MathMLPresentationTag",
   AutoDelete->True], TraditionalForm]], "Input"],

Cell[TextData[{
 "This example, solves the grating equation for \[Lambda] and then finds the \
propagated error in terms of the uncertainty in ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", "
}], "Text",
 CellChangeTimes->{{3.5372795726299496`*^9, 3.5372796210597196`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"errorPropagateVariance", "[", 
  RowBox[{
   RowBox[{
    FractionBox["a", "n"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]i", "]"}], "-", 
      RowBox[{"Sin", "[", "\[Theta]r", "]"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "\[Theta]i", ",", "\[Theta]r"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"da", ",", "d\[Theta]i", ",", "d\[Theta]r"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5321967396036434`*^9, 3.532196792933694*^9}, {
  3.5372785351806107`*^9, 3.537278536299675*^9}, {3.537279375689685*^9, 
  3.5372793976139393`*^9}, {3.537279625031947*^9, 3.5372796406928425`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"a", " ", "d\[Theta]i", " ", 
      RowBox[{"Cos", "[", "\[Theta]i", "]"}]}], "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"a", " ", "d\[Theta]r", " ", 
      RowBox[{"Cos", "[", "\[Theta]r", "]"}]}], "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"da", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]i", "]"}], "-", 
        RowBox[{"Sin", "[", "\[Theta]r", "]"}]}], ")"}]}], "]"}], 
    "2"]}]}]], "Output",
 CellChangeTimes->{
  3.5321967937387395`*^9, 3.5372776230004373`*^9, {3.5372782730046153`*^9, 
   3.537278305693485*^9}, 3.5372796417089005`*^9, 3.537282765286559*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numeric Examples", "Section",
 CellChangeTimes->{{3.537278828432384*^9, 3.5372788517277164`*^9}, 
   3.5372828977101336`*^9}],

Cell["\<\
The final step is to be able to efficiently evaluate the uncertainty and get \
a numeric result.\
\>", "Text",
 CellChangeTimes->{{3.5372798065533295`*^9, 3.537279831512757*^9}, {
  3.5372802172968225`*^9, 3.537280248565611*^9}}],

Cell[CellGroupData[{

Cell["Simple example", "Subsection",
 CellChangeTimes->{{3.537280272416975*^9, 3.5372802740180664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"z", " ", "=", " ", 
     RowBox[{"a", "/", "b"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"bestEstimates", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "2.34"}], ",", 
      RowBox[{"b", "\[Rule]", "5.62"}]}], "}"}]}], "  ", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "a", " ", "substitution", " ", "rule", " ", "for", " ", 
     "the", " ", "measured", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"bestEstimatesError", "  ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"da", "\[Rule]", "0.03"}], ",", 
      RowBox[{"db", "\[Rule]", "0.07"}]}], "}"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "a", " ", "substitution", " ", "rule", " ", "for", " ", 
     "the", " ", "uncertainties", " ", "in", " ", "the", " ", "measured", " ",
      "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"variance", " ", "=", " ", 
    RowBox[{"errorPropagateVariance", "[", 
     RowBox[{"z", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"da", ",", "db"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varianceN", " ", "=", " ", 
     RowBox[{
      RowBox[{"variance", "/.", "bestEstimates"}], "/.", 
      "bestEstimatesError"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stddevN", " ", "=", " ", 
     SqrtBox["varianceN"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zN", " ", "=", " ", 
     RowBox[{"z", "/.", "bestEstimates"}]}], " ", ";", 
    RowBox[{"(*", 
     RowBox[{
     "Substitute", " ", "in", " ", "a", " ", "and", " ", "b", " ", "to", " ", 
      "numerically", " ", "evaluate", " ", "z"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<z = \>\"", ",", "z", ",", "\"\< = \>\"", ",", " ", "zN", ",", " ", 
      "\"\<+-\>\"", ",", " ", "stddevN"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5372788751990585`*^9, 3.537278914222291*^9}, {
  3.537279686302451*^9, 3.5372798026211042`*^9}, {3.5372798416703377`*^9, 
  3.537280161451628*^9}, {3.5372827759141665`*^9, 3.537282780291417*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "2.34`"}], ",", 
   RowBox[{"b", "\[Rule]", "5.62`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5372798750972495`*^9, 3.5372798912971764`*^9}, {
  3.537279938309865*^9, 3.5372799602911224`*^9}, {3.5372800834651675`*^9, 
  3.5372801618496513`*^9}, {3.53728276879976*^9, 3.537282781161467*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"da", "\[Rule]", "0.03`"}], ",", 
   RowBox[{"db", "\[Rule]", "0.07`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5372798750972495`*^9, 3.5372798912971764`*^9}, {
  3.537279938309865*^9, 3.5372799602911224`*^9}, {3.5372800834651675`*^9, 
  3.5372801618496513`*^9}, {3.53728276879976*^9, 3.537282781162467*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    FractionBox["da", "b"], "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    FractionBox[
     RowBox[{"a", " ", "db"}], 
     SuperscriptBox["b", "2"]], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.5372798750972495`*^9, 3.5372798912971764`*^9}, {
  3.537279938309865*^9, 3.5372799602911224`*^9}, {3.5372800834651675`*^9, 
  3.5372801618496513`*^9}, {3.53728276879976*^9, 3.5372827811634674`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"z = \"\>", "\[InvisibleSpace]", 
   FractionBox["a", "b"], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", "0.41637010676156583`", 
   "\[InvisibleSpace]", "\<\"+-\"\>", "\[InvisibleSpace]", 
   "0.007442496897734012`"}],
  SequenceForm[
  "z = ", $CellContext`a/$CellContext`b, " = ", 0.41637010676156583`, "+-", 
   0.007442496897734012],
  Editable->False]], "Print",
 CellChangeTimes->{{3.5372800835901747`*^9, 3.537280161855651*^9}, {
  3.5372827688067603`*^9, 3.537282781164467*^9}}]
}, Open  ]],

Cell[TextData[{
 "NOTES :  \n    1) If you want to surpress (i.e., hide) the intermediate \
steps, add a semicolon at the end of the line of code.\n    2) It is still \
your responsibility to correctly round the derived quantities and the \
propagated uncertainties.   This ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code doesn\[CloseCurlyQuote]t do it for you."
}], "Text",
 CellChangeTimes->{{3.537282366012722*^9, 3.537282369422917*^9}, {
  3.5372824081221304`*^9, 3.537282409576214*^9}, {3.537282459532071*^9, 
  3.5372825070097866`*^9}, {3.5372828067359295`*^9, 3.537282838351738*^9}},
 Background->RGBColor[1, 0.9, 0.8]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fancy example", "Subsection",
 CellChangeTimes->{{3.5372802806434455`*^9, 3.5372802834796076`*^9}}],

Cell[TextData[{
 "The next equation comes from the absolute measurement of the Faraday \
experiment.  Students are asked to predict how a 1% error in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "E"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox["I", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "'"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " propagates into an error in the derived value for the Earth\
\[CloseCurlyQuote]s magnetic field which is given by the following equation."
}], "Text",
 CellChangeTimes->{{3.5372803045918155`*^9, 3.5372803479002924`*^9}, {
  3.5372803785040426`*^9, 3.5372804548654103`*^9}, {3.5372821567347517`*^9, 
  3.5372821858054147`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
GAwGg8FgMBgMBoPBMA3+CyxtbtM=
    "], {{0, 112}, {440, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{229., Automatic},
  ImageSizeRaw->{440, 112},
  PlotRange->{{0, 440}, {0, 112}}]], "Input"],

Cell["\<\
The same error propagation routine is applied as before, but now the algebra \
is much MUCH longer, and the likelihood for human error grows.\
\>", "Text",
 CellChangeTimes->{{3.537281786516577*^9, 3.53728183920259*^9}, {
  3.53728219026867*^9, 3.537282218160265*^9}, {3.5372822783537083`*^9, 
  3.5372823647486496`*^9}}],

Cell[TextData[{
 "NOTES :  \n     1) No garauntees are made about the accuracy of the \
numerical values given, however, the general method is valid.  Any students \
doing the Faraday lab are responsible for their own calculations.\n    2) If \
you want to surpress (i.e., hide) the intermediate steps, add a semicolon at \
the end of the line of code.\n    3) It is still your responsibility to \
correctly round the derived quantities and the propagated uncertainties.   \
This ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code doesn\[CloseCurlyQuote]t do it for you."
}], "Text",
 CellChangeTimes->{{3.537282366012722*^9, 3.537282369422917*^9}, {
  3.5372824081221304`*^9, 3.537282409576214*^9}, {3.537282459532071*^9, 
  3.5372825070097866`*^9}, {3.5372828067359295`*^9, 3.537282818031576*^9}},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "i", ",", " ", "zn", ",", " ", "tE", ",", " ", "t0", ",", " ", "ip"}], 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bE", " ", "=", " ", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", "\[Pi]", " ", "\[Mu]0", " ", 
        FractionBox["i", 
         SuperscriptBox["zn", "3"]]}]], 
      SqrtBox[
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["tE", "2"]], "-", 
        RowBox[{
         FractionBox["ip", "i"], 
         FractionBox["1", 
          SuperscriptBox["t0", "2"]]}]}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "a", " ", "substitution", " ", "rule", " ", "for", " ", 
     "the", " ", "measured", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"bestEstimates", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]0", "\[Rule]", " ", "1.2566370614*^-6"}], ",", 
      RowBox[{"zn", "\[Rule]", "0.150"}], ",", 
      RowBox[{"tE", "\[Rule]", "1.00"}], ",", 
      RowBox[{"t0", "\[Rule]", "20.0"}], ",", " ", 
      RowBox[{"i", "->", "0.000161"}], ",", 
      RowBox[{"ip", "->", "0.000161"}]}], "}"}]}], "  ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "a", " ", "substitution", " ", "rule", " ", "for", " ", 
     "the", " ", "uncertainties", " ", "in", " ", "the", " ", "measured", " ",
      "values", " ", "to", " ", "be", " ", "0.01", " ", "of", " ", "the", " ",
      "best", " ", "estimate"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"bestEstimatesError", "  ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dzn", "\[Rule]", 
        RowBox[{"zn", "*", "0.01"}]}], ",", 
       RowBox[{"dtE", "\[Rule]", 
        RowBox[{"tE", "*", "0.01"}]}], ",", 
       RowBox[{"dt0", "\[Rule]", 
        RowBox[{"t0", "*", "0.01"}]}], ",", " ", 
       RowBox[{"di", "\[Rule]", 
        RowBox[{"i", "*", "0.01"}]}], ",", 
       RowBox[{"dip", "\[Rule]", 
        RowBox[{"ip", "*", "0.01"}]}]}], "}"}], "/.", "bestEstimates"}]}], 
   "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", "the", " ", "variance"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variance", " ", "=", " ", 
     RowBox[{"errorPropagateVariance", "[", 
      RowBox[{"bE", ",", 
       RowBox[{"{", 
        RowBox[{
        "zn", ",", "tE", ",", " ", "t0", ",", " ", "i", ",", " ", "ip"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "dzn", ",", "dtE", ",", " ", "dt0", ",", " ", "di", ",", " ", "dip"}],
         "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Numerically", " ", "evaluate", " ", "the", " ", "variance"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varianceN", " ", "=", " ", 
     RowBox[{
      RowBox[{"variance", "/.", "bestEstimates"}], "/.", 
      "bestEstimatesError"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "a", " ", "numerical", " ", "value", " ", "for", " ", 
     "standard", " ", "deviation"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stddevN", " ", "=", " ", 
     SqrtBox["varianceN"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Numerically", " ", "evaluate", " ", "the", " ", "derived", " ", 
     "quantity"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bEN", " ", "=", " ", 
     RowBox[{"bE", "/.", "bestEstimates"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Nicely", " ", "displayed", " ", "output"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\\n\\nbE = \>\"", ",", "bE", ",", "\"\< = \>\"", ",", " ", "bEN", 
     ",", " ", "\"\<+-\>\"", ",", " ", "stddevN"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", " ", "[", 
    RowBox[{"\"\<Relative uncertainty in bE = \>\"", ",", " ", 
     RowBox[{"stddevN", "/", "bEN"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5372788751990585`*^9, 3.537278914222291*^9}, {
  3.537279686302451*^9, 3.5372798026211042`*^9}, {3.5372798416703377`*^9, 
  3.537280161451628*^9}, {3.5372804703202944`*^9, 3.537280553047026*^9}, {
  3.53728065556289*^9, 3.5372807620159783`*^9}, {3.5372810394088445`*^9, 
  3.53728121556492*^9}, {3.537281259047407*^9, 3.5372812597584476`*^9}, {
  3.537281296153529*^9, 3.5372814484942427`*^9}, {3.5372818778508005`*^9, 
  3.537281921425293*^9}, {3.537281956126278*^9, 3.5372819927863746`*^9}, {
  3.5372824326865354`*^9, 3.537282432995553*^9}, {3.537282928014867*^9, 
  3.5372829795078115`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Mu]0", "\[Rule]", "1.2566370614`*^-6"}], ",", 
   RowBox[{"zn", "\[Rule]", "0.15`"}], ",", 
   RowBox[{"tE", "\[Rule]", "1.`"}], ",", 
   RowBox[{"t0", "\[Rule]", "20.`"}], ",", 
   RowBox[{"i", "\[Rule]", "0.000161`"}], ",", 
   RowBox[{"ip", "\[Rule]", "0.000161`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.537281363074357*^9, 3.5372814537865458`*^9, 3.5372815754435043`*^9, 
   3.537281703802846*^9, {3.5372819004890957`*^9, 3.537281921789314*^9}, 
   3.537281994443469*^9, 3.5372824337085943`*^9, {3.5372829653720036`*^9, 
   3.5372829796458197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"dzn", "\[Rule]", "0.0015`"}], ",", 
   RowBox[{"dtE", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"dt0", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"di", "\[Rule]", "1.61`*^-6"}], ",", 
   RowBox[{"dip", "\[Rule]", "1.61`*^-6"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.537281363074357*^9, 3.5372814537865458`*^9, 3.5372815754435043`*^9, 
   3.537281703802846*^9, {3.5372819004890957`*^9, 3.537281921789314*^9}, 
   3.537281994443469*^9, 3.5372824337085943`*^9, {3.5372829653720036`*^9, 
   3.537282979858832*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n\\nbE = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       FractionBox["ip", 
        RowBox[{"i", " ", 
         SuperscriptBox["t0", "2"]}]]}], "+", 
      FractionBox["1", 
       SuperscriptBox["tE", "2"]]}]], " ", 
    SqrtBox[
     FractionBox[
      RowBox[{"i", " ", "\[Mu]0"}], 
      SuperscriptBox["zn", "3"]]]}], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", "0.0006129532721497506`", 
   "\[InvisibleSpace]", "\<\"+-\"\>", "\[InvisibleSpace]", 
   "0.000011477591131484393`"}],
  SequenceForm[
  "\n\nbE = ", (2 Pi)^
    Rational[1, 
      2] (-$CellContext`i^(-1) $CellContext`ip $CellContext`t0^(-2) + \
$CellContext`tE^(-2))^
    Rational[1, 2] ($CellContext`i $CellContext`zn^(-3) $CellContext`\[Mu]0)^
    Rational[1, 2], " = ", 0.0006129532721497506, "+-", 
   0.000011477591131484393`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5372813631193595`*^9, 3.5372814538955517`*^9, 3.537281575452504*^9, 
   3.53728170387785*^9, {3.5372819004950957`*^9, 3.5372819217963142`*^9}, 
   3.5372819944484696`*^9, 3.537282433712594*^9, {3.5372829653760033`*^9, 
   3.537282979896834*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Relative uncertainty in bE = \"\>", "\[InvisibleSpace]", 
   "0.01872506706951766`"}],
  SequenceForm["Relative uncertainty in bE = ", 0.01872506706951766],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5372813631193595`*^9, 3.5372814538955517`*^9, 3.537281575452504*^9, 
   3.53728170387785*^9, {3.5372819004950957`*^9, 3.5372819217963142`*^9}, 
   3.5372819944484696`*^9, 3.537282433712594*^9, {3.5372829653760033`*^9, 
   3.537282979897834*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Numerical values copied from the lab guide,\
\>", "Subsubsection",
 CellChangeTimes->{{3.5372820970113363`*^9, 3.537282112267208*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQmcTtUf/x9bso59G6OxhrKv0dhCFGIK2bJm+1FGypIlhOwhQtlFyr4z
9hp7RMiSsSfJlgkzg+f/+T/fv/O/7vacc+99nmdmnPfrVS9znnvPPcv3fJd7
z5K/w4fhHVK4XK7v8d+WlC7X//23WyKRSCQSiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEklAOXfu3KxZswJdColEIsz2
7dubN2/er1+/QBdEEkhOnToVERFRp06dQBdEIpGoGTx4cIUKFSIjI336lMeP
H2/evLlJkyYjR4706YMkDx8+/Oabb/bt2+ej/E+ePNmrV68333zTR/n7GfvV
+e+//3788ccHDx4oE9evX3/p0iWv9/7666+qG73y559/7tixIyoq6tatWzzX
nz9/fuvWrb///rvQU7xy5cqVnTt3ohg3b94UvffixYsbNmz4+++/nS0SePTo
0ZIlS8LCwlBr/Nv8YjtVcDYTAmP2u+++s5mJRJLowFCdOHFi0aJFXR7atm0b
6BIlPrZs2dKzZ89y5cq9oCA0NLRQoUIlSpSoUaNGp06dFixYcO/evUCX1Ix1
69bVqlUrWbJkEAOUP9DFkUgkT3Ht2jXS0q+88oqPHoEQZty4cVBc9KAPP/zQ
Rw+SgAsXLrz22mtz586lP+GFosGrVav2AgfFihUzz3zNmjU1a9akfnzxxRd9
Xxvf4lR1EJGlT59eGaHALqdMmfLgwYPmNz5+/LhIkSKw45wPQqj1xhtvuJ6A
R3Ts2NHEB0DcVK9evSxZsrz++uvBwcFwJxCiai87c+YMXAsTwYArorz+yJEj
kChWjBQpUrz11lvnzp3jrMX9+/dfeukl3Ij257yFB4TSXbp0yZQpU7Zs2TJm
zJg9e3Z0SrNmzdauXRsfH6+62GYVLGeyefNmbfPWrVuXXTB58mSM36tXrwqV
RCJJ7EA17d+/H4NIxox2uHHjBlQfaaRPPvlk5cqV27dvX7hwYePGjSkxJCRk
z549gS6mISdPnoQKhTmWMaNEkgBBQFe5cmUMz88//9x3T4FztW3bNhkz+prD
hw/nyZNn165dqvS4uLiSJUtS+0+cOHHP0+zcuXPOnDn0jtf80wz0+dmzZ/Pn
z580YkanqjNmzJiwsDBlyk8//fT888+j2c1vXL9+PR6NAcjzlMuXL+fNmxcB
Ue3atStUqJA8eXLq0Pr16+tef+LECTgPJUqU+Oeff/BnbGxsw4YN06VLFxUV
pbqyT58+LlNmzJjBLobApE2bFokoADl4RNasWX/77TeeikAD0C0OxozHjh3L
mTNnqVKlUAY0Pn01/vnnn8uWLYsH9e3bV3mx/SpYzuSVV17RNu/06dOV1yxa
tAjO0tGjR8WbQWKInO6YKKB3yzJmtMNbb71FikWliKZNm0bpGTJkOHXqVKCK
x0OnTp1kzCjRRWpyFf5vEISN165d88ODMmfOLGNGTiyIwenTp3PkyKF075V0
6dKF7MWGDRt0L4AMwJTcuXPH64Nat26dNGJGwn51mjdv3qtXL2XKuHHjeCJB
hHvUKYcOHfJ6cZ06dYYNG4bQj/5ETJEvXz66fdOmTaqL7927V7hwYfz0yy+/
sMSrV6+mTp06V65cFEUSDx48QByaO3fudu3aQeo+fZrQ0NCUKVNev36dLsbT
CxYsWL58+cjISETEjx492rFjR+nSpakYaEOvYTJuRIbOxozQYMWLF0eGJ0+e
dHsCdjbT+N9//0UVPvroI3ax/SpYzmTz5s3QgW2fpmPHjvfv31dd2b9//5CQ
EP+o5WeBgwcPFi1aNNClkHiHBpGMGe3w3nvv6caMgE1TeeeddwJSNk5gT2XM
KNEiNbmKpN0gefPmlTEjDxbEAD5qmTJl4DkbfSjs3bu3ecwIWrRoceXKFa/P
6tq1a1KKGe1Xp1ChQqr5pc2aNfvggw/M70KMT6s2AAIH84u3bNkyYsQIVSL7
dj9kyBDVT4guXXpfMN9++22kd+/enaUsXLgwPDw8JiZG+1DEMunTp1duRLBk
yZIaNWqoFmDevXuX5pqClStXmtTi5s2bwcHBAwcOdDZm3L59O3JDOEZ/KmNG
8OWXXypjRptVsJNJWFiYthN1wXAuUKBAtWrVtLNqJaI8fPiwatWqSUZfJW3K
lSsnY0aboPWMYsZvv/2WfgoKCgpI2TiBxpYxo0SF1OQqknyDQAPImNEr1sQA
UQPa1mRlHClh85iRcx+P//3vf0kpZrRZndu3byP0O3HihDIRoo5YzPxGBJXF
ihXLkSMHnp4mTRrzlkfsoH0b8Pjx4wwZMuD2SZMmKdMRcWTLlg3pgwcPVt3y
9ddfI/35559nj+vTp4/RJjzLly/Hxd988w1L6dSp09mzZ7VXIvozil6VIJRu
0qTJuXPnnI0ZZ8+e7fLMEf3333/dmpgRjpMyZrRZBcuZIMDPlCkTz3d8YubM
mchn7NixnNdLjMBAS0r6KmkjY0b7mMSMq1atop9SpkwZkLJxImNGiRapyVUk
+QaRMSMPFsTg+vXr6dOnT5UqFeIXo2t4YkZOZMyoBLFAunTplAEd7St1+vRp
k7sQ3WTMmBER3Keffkr9Mn78eAtPz5o1a+rUqVUbtK5du5byXLp0qer6vXv3
0k9slyQTWrRoAdfixo0bLOXw4cO6V96/f5+y1UapjPnz5+fOnfuff/5xPGak
ZaFg+PDhbk3MiIgYfeRIFexkUr169eDg4P79+2MA8nw9xFh+7rnnEPvfvXvX
68X+4eTJkx9//DEqUrZs2caNG8+bN+/hw4eqa44fP96nT59atWrB+a9Zs2ZE
RARSdHODcDZp0qRChQoNGzb84osv8CetqV+0aNGUp1Fu3LR7926WjivNC4w2
bNeuHfVIzpw56S4MOuU1EMjRo0fXr18fBa5duzY67sKFC6It8+effw4bNgy3
05/79++H316xYkVUULm6HJLZunXr8uXLN2jQYOPGjbpZ8TSym7udjRrZ7Xl9
xFpS+Vl8wYIFLB2aRJkbWmbQoEEoldsz0b1Dhw5Vq1ZVvlPiL78RypgRj4DZ
qly5Mhp23LhxyincDgoJZ8ktP9Fmg1jAJGacOHEi/VS8eHGTHLwOCgvCQ0D5
9+vXD/oZoguZ/PLLL+lFnwpVzLhixYpGjRpBjDt16nTx4kW+Zvi/ODgw3f5S
gO7AjU0/N9f58+cHDBjw1ltv0Z/IKjw8HA3SsWNHlbx51eQmjckJpyHgL7NX
+EVFi0mDWNBUqBQc0c8++8ztcU2HDh366quvouMGDhyodP8YJABjxozR/vTX
X3+NGDGiXr16aBMM88mTJ2uX3vDX3ULM6KAM83cQp1qzIDzmg4jHw9GF4g6U
1uQa85gxKipK6VcrgcyMHDnytddeK126NJr3+++/1w2y7PeUBT1poQs4q2MO
gp3mT8DjEP01V4DMkSH9e9WqVbo5oC6ZMmWKiYmBBaQdVAoVKvT48WP+MoCz
Z8/iRmhIVTrra/SC6qfr16/TT7Ap5pljpGfIkOH111/nLAxCV2SL9tT9FT2F
+m7evNntGV/OxowYOOgC+tSIyFQVM/JjXgU7mezcudOlAKMbvcaWphpBu5Ml
kMOJYCDy5cuHQYrmnTBhQlBQEMoGVabUjTNnzkyZMiXGIxRddHQ06aVUqVJR
vyuB+i1atOjPP/988+bNgwcPwiF0PZmhfeDAAWRLDZUuXbrIyEjlx1mM30mT
Jrk88669bhM0ffr0Ll260IRhiF8XDz169GAXLFu2DBWB1t2zZ8+RI0dgIlHa
559/XrUrkQloDegcWqKbNWtWpAwfPhyZ4N9UBYzu9evXu59oaWRO6cmSJdNO
YOZpZP52Nmlkt0d7zJ07F3chESqL3YUMYZgonY0j9AK0Je27VbBgwWvXrtHW
YVQRpmw5y28Cixn37t3L2pCFOWzphINCwllya0+03yAWMIoZ4+Pj2eR5eDVG
t/MMCiHhYcCUQz1CLB88ePDo0SOIMYQHqpsdC8ImSrGYEQ4SJNbl+TBKJUd7
8szWcHZguv2oAEWb15Gx6efm2rRpE6IzVmZIJvUyIyQkRPkFxFyTmzcmDzwy
L1pmc/hFRReTBhHSVHBQWaXgryLiYwceEcHBwezzB6oMx5XpEG0ohyAUhenb
ty88T/g8VAxcj+jAWt2FYkZnZZi/kDxqzZrweNU5Xj0cI1Aq3GK+bY55zPj5
55+vWLFCm45+z549e9WqVVFmKJ+pU6cijiD/nAVZTvWUkJ601gU81eEB2ont
EoM+rVatmnLfmLCwsMKFC9O/tXvYuj1zSvE4NmESrWfSNSa0adOma9eu2vQ6
depQhqqh6vacg0aN5nWLHnQNLps1axZPSejTapo0aXSPjMRD0URsmyDHY0a3
4v05jSkLMaN5FWxm0r59+/Tp07ueBiMdsm2SG20EUaBAAcvlcYqvvvoKwxmB
P0vZt28fveuAEFLKiRMnKEV57CadRVKlShVlbjBqrqc3bqIJ+czKo/VgqnBN
3rx5tYWBMoEM684N1sXopRCGG/JRvTyBqqHemTNnDk/mxz2Q0kYTDRo0aOjQ
odT70BI0dbxs2bJ9+vSBDPzxxx9I//3330ljqxat8zSym7udvTay8kalvlWm
s3EE7wKuFESR9G3Tpk3hZQ0ZMgRqH31Eq6E5y28OxYx4OpoIntvq1auRLTUX
qFixIvtG76CQcJZc9ImONIgFdGNG9FGzZs0ovXHjxkb7HggNCk7hIWBzUXcM
Q+WrUXpJDt04fvx4hLFsiQe5KzDiaKjPPvsMog7pRXtSMaDtvTaCgwPT7XcF
KNS8joxNPzfXUQ8UESDCfffdd5EzHIO4uLgZM2ZQL48ePVqVra4m52xMEzhl
3lqZdeEXFXOMTBu/ptqxYwd07HPPPYeLITkoQ8uWLRcuXIghRjUFpUuXJq2L
kYuYGtdTuiqUQ8AIl175MgrRFl3ZoEEDa3UXihkdlGH+QnKqNQvCw28+RD97
HTx4kJ5oPtvQKGaE7UAkhbJpY0a0P2pdpkwZ5cdlNg+QldBZbcOvJ0W7gLM6
ouTKlWvx4sXKFAw95QI6LRs3bsSYZQf5sa1slCPLnP/++69bt24Y6Rja2i06
6XAroPslCxGNi2OpSKtWrRCnc55T/9133yFP1eaxjC+++KJEiRJs1aQvYkYA
wXM9IXfu3BhfQrebV8GRTP76669Vq1a1aNGCnc2RM2dOkwktzEeCS2CnVDaB
2oTMYFCr0mvUqOHyfNsltca214Bwsmv69+/vevIqiTFy5EgkqqbwYVAorTwz
2Xv37lU9FwrZ6HwZXXQ16r1792hPNu15mjRPAIpL+8rFiJ49e7o8LyFhQZTp
ERERVAvVh0vWsxAJSuFsZDd3O/M0MoBG1dW3lK5y+99//32X5x0g25372rVr
NHeav/zmUMwIla4MvqCFXn75Zaq1skaOCIlQyfmf6FSDWIDFjDBMMMHLly//
5JNP8uTJ4/J8NYAPYzQ5VnRQCAkP5dC5c2dl4q5du6iocESV6eSuYEDR22YG
7AjSw8PDuRrCiYHpDpACdAdibPqzudxPBBVujGr+GPWydvzqanLOxjRCVOZF
y6wLv6iYYxIsCOlGOpIMNUXBWCLkh1oGwLFRXk8fvJShHDod3jX0tvJlFMIo
OiwDfo61uluYm+qIDPMXUkit8QuPkPkQjRmnTp1Kxdu9e7fJZSxmTJcuXZAC
+n4HVDEjurtSpUpI185ZLVWqlLaEjvSUW1BP8neBaHU4uXz5Mu6lQJgBOTdf
RPPGG2+w+bQEHRWhDCSNOH369IABAxCoup6AeqkiO0RMlJtuDvRd1Vw1Ib7D
ZfyeOSL6bNmysSM5lBw6dAi6SDlfy0cxI4CPRO8oXJ65TIhV+af7mlSBH85M
jh07xg7mwC1Gl23YsIGumTJlip1S2WTs2LFUBtW5rjQkXU+23jpz5gwkXyXY
o0ePdnk+vCoToQldnu+nuIUlxsfHK7dywp80w6pJkybKe2/duoXcVKrYHF2N
SlsMhYaGaq+HJqR6DRo0iPMRNINCO6ZodyagGqGRkZGUzsYFZyO7uduZp5Hd
gvqWPnxD+Wi/UvGX3xyjPXD2799P+SjlwREhESo5/xOdahALsJixSpUqdevW
pWjR5VnFYL6UUnRQCAkPvavs06ePMvHOnTuULfwxZbrRHjhNmzZ1cZ9o7HZi
YLoDpADdgRib/mwu9xPNXLBgQdXjWrZs6fJ8aFCl62pyzsY0QlTmRcusC7+o
mGMSLAjpxqpVq2qvdHs+HVIL0DpZBp3ypgzlqBcQBahy2Lx5M9TR8uXLWYpQ
3S3EjI7IMH8hhdQav/AImQ/RmJHeL4Hff//d5DIWM6Lpzij45ZdfPv/8c8R6
qpiR9lGBA6zNis7bVZXQkZ5yC+pJ/i4QrQ4nK1euZEc8EF43wEGbJ0uWbOvW
rcpEFvh/8skn5k+8ffs2orA5c+bQCweiYcOGymsoojRSPunSpcOvOXLkMHkK
ba/HOT1v48aNLoNlgPfv30c4rJpK5LuYkTKnNz9EgwYNeJYOmVSBH6FM7t69
Sy8xwPbt23WvwdCgC7p162anYDZBG9LQa2uA9nhQcPHiRdiRkJAQ3Js6dWrl
T2x1J0T0448/NjqGko4gx2BBiM0S4QkgT6FdRHQ1KnxpJIaFhWmvj4mJofnb
5cuX53wEbVut1X6LFy+mmqpeI/z000+UfvDgQUqx1shu43bmbGQhfUtGRKtv
7ZRfhcm+qTSVReXd2RcS0ZJzPtGpBrGAam4qTDzNPQsODlaezKtFdFAICQ+9
nVZ9/Xn8+DEVFSKqTDeKGWnSV6lSpUxqocT+wHQHTgH6f2z6ubkQC+iWuXPn
zkh/+eWXVem6mpyzMY0QlXnRMvNgIirmmAcL/LqRYsbmzZurcoiNjaU1NQgS
lek0EVoZylWpUsXFN2lchXndLcSMjsgwfyGF1Bq/8AjpHNGYEbEwFe/y5csm
l5mvZ/zggw9UMeO7776LixGYaC/WLaFTPSWkJ/m7QLQ6nAwaNEh5fKHbsz1O
UFCQyectlFmrWBDX0AcyNKDuNlO6IGKlABAot8YqVKiQy3g3dZoYab5KrnXr
1nAzeFb2IfZBVkZBTc+ePdE+qtbwaczo9ogWvCPWMiVLllROStdiXgVOLGQC
RUQKWfWSikF7HLlEJi37ApoWaBTYatm9e3fjxo2LFy8+ZcoUOotTaws++eQT
1xNg6yMiIrQfZx88eEBvP1q2bMkSkS3tjsuP7gCnM26qV6+uewtUCn7NkiUL
5yMsa78DBw5QimgjuznamaeRnfJLLZRfF5OYsVWrVi7PBCplon0hES055xOd
ahALtNWsZxw3bhylqL4XqBAdFELCQ16lKty7ceMGFWzJkiXKdKOYkXYt4PfM
7Q9Md+AUoP/Hpp+by8h/69Kli8uz3l+VbuSq8TSmEaIyL1pmc3hExQRz35Vf
NxrFjODVV1/FT2nTplUmUrMoQzlqRs5vuwRP3f0ZMyplmL+QQmqNX3iEdI5o
CMO+N+luisswjxl//PFHVcxInaX6OGtSQqd6ypGYUdsFotUxB2Ue6wGigjE1
VgFKGBISwv5UrapDZJExY8Z8+fK9pgF6iRqE5xQMBp23qBqttPYTaJc6ogD0
k8mUSJqYyrmNDNQRokLdwyMiIyOTJ0+Ogv34NPT6y+XZtQl/KuctOALtm3r6
9Gm2BsqksuZV4MdaJnSwTtOmTXV/vXr1KpVf912H36Clx7Nnz/Z65bVr18LD
wzNnzjxv3jx6UUBTLHTt4OrVq8n0ENmzZ9+5c6fqmjFjxrg8i3Ro+veuXbtS
pUqFZhEqv+4Ap524ypQpo3tLhQoVXCLnntvXfvyN7BZpZ6+N7JRfKlR+E0xi
RupH1bwOt20hsVBynic61SAW0MaMEJLXX3+dEk12YhcdFELCs27dOiqAcvUK
LQAvWbKkSnOax4z8nrkjbkmgFKD/x6afm8upmNHNZ010EZV5p2JGIVExwqvv
yqkbTWLGd955x+VZ0aZM1MaM9Pbb6zQ5gr/uAYwZOQsppNb4hUfIfIiGMGwm
HtuHXBfzmBHBhepgdzoyoF69epwlTOAxo2h1zPnhhx8o0EuWLBm0jTL0y5Qp
U6FChdifqu1xvvrqK1ywWI/JkydTg0BN8ZckNjaWVhkrV8t2796dstJusxAd
HU0/6W64StC+WPPnz/f6dGiksmXLGk3+7Nu3r4sDISXJAztr486dO2z+p+4G
tl6rwInlTNasWYOyNWvWTPdXdjAK/4knvgCqD2Vo1aqV7q9Qp6Q6Ll++DA2f
Jk0a5W6N5nYQamf69OlscW6GDBlUh6/dvXuXxJvmfiAwhwkTLb/uAKdt5fBE
3SkBZENLly7N+Qj72o+zkd3i7WzeyE75pfzlN8ckZuzQoYNLb8WQTSGxUHKe
JzrVIBbQxoxuzwZc9C0AkmN0ypjooBASHrfnDSdc9Lx5827evPnGjRvQfvDt
y5cvr50ilaBixkApQP+PTX82l9vRmNHNYU10EZV5R2JGC6Kii1fflVM3msSM
tM5LtVmlNmakeZtGm77GxMSwUwyE6h6omFGokPxqjV94hMyHaAhDq8Jd3g6R
N48ZtdDUPt2TfxNjzChaHR4uXbqEG1XbuUNyli5dqns9OhpDz2giImABjvZc
RRMQCOOWadOmsRSEtJSPdsOf7du300+qjbCUtGnTBuPC6xlY6FlUx2Ta54wZ
M6rrwar58ssv40/V5F77KM9nhHeEuB7PGjdunIUq8GAnk6ioKJSNztLVwibx
6ipzv0Fb9EMr6m7QtG7dunnz5rmfTB187733lL/qqtmNGzcq42v8mwwTgBpR
5T948GCXZ3OtQ4cOIR/VQmAedAd448aN6YnIVnsLfaHu3bs35yPsaz/ORnZz
tzNnIzds2NCld7avqF/KX35zTGJGmlGjqz/tCIm1knt9olMNYgHdmNHt2VOL
lCEcEt2IVXRQCAkPuHLlSlhY2IgRI+DBtmjRIiIiAv6V7qkfCSpmDJQC9P/Y
9GdzuR2KGYWsiRZRmXckZuQXFXN4fFce3WgSM9J6z3bt2ikTtTEjeaFQL+y4
HCWjRo1ie78L1T1QMaNQIfnVGr/wCJkP0RCmX79+VGWTJZxu7phx3759Y8aM
cT8ZLMmTJ1fta2pUQqdiRiE9KTo9mL86PCxfvlxVX9oAx2gT9U2bNqVIkcJk
i/UFCxZQm+i6TEbQglblekaoTYqRtYHSlClTXJ5XzUYfxWJjY4OCgho1amT+
UAwKNDvPezwtjq9nnDNnjnLjXGXM6H6yxxfGu+ouO1VwKpOFCxeqlqgrYXvg
qHbf8jNs124E+yqxiYmJgf9JW5HT9oyqndNIzcJgKRNhQVTvVaBgKVjAyFU9
/caNGyTMuXLlKlKkiIXy9+jRA7cXLlxYmYgCUKW0x+LEx8djgJj0ixb72o+z
kd3c7czZyORfIV1VcgrQVO9zTPxS/vKbYxQzIs+0adOmTJlS99WoHSGxVnKv
T3SqQSwAV4cerYoZAbxf+kl35bXooBASHhjHAgUKqBb4GJGgYsZAKUD/j01/
NpdbPP7S1eRC1kSLqMw7EjPyi4o5ug2igkc3UsyoXbqFlqTJCZGRkcp0bczI
psnBdVdtsAONrZRhoboHKmbkL6SQWuMXHiHzwSMGSpjMG33eInhiRoyR8uXL
04czdkbGwIEDVZdRkJU/f35lolMxo5Ce5O8C0erwMGDAANWkwfXr12fPnt3o
+vr162t3M1aCeA0N6PK8XuDc/gvDMzg4WLv3OPkG2k949FW6e/fuRhnSbEnE
MiYPRTVDQ0N1nbfLly+PHDnSvMyOx4wIhJVfH5Qx4+PHj2mh6JYtW5S32KyC
U5lAwbZu3dro102bNvEMbV8DsaRdu12eVyvLli2DEouLi9uxYwfUBbPLdA3+
z440On78OFtSikzQ7zQpDlYemlA1F4gO61GeCMxgju6ECRMslJ92SIDdpONK
IQkoBqwhRo3LMytJNaufNg1WvWM0h3aNzpQpkyqd1jUA1XBm5zexw7M4G9nN
3c6cjUynmj733HPsZRqsQK9evaDHkF6iRAnl7aRFYU+1LcBffnPI2dMeeT9s
2DCkDx482OhGy0JiueTmT+TPdtu2bRDFzp0721xSzaAlSC69o9lQKjqLzaW3
sFF0UAgJD23wDq0Ib+fevXu67+EZZNlDQkJU6TQ/mf8Fr/2B6Q6cAvT/2PRn
c4Fu3bq59FwvEhWjvW5UmlzUmqgQlXnRMuvCLyrm6DaI9jKvupFiRm3habGe
djsFeg+PUIWl3LlzJ2fOnPQUxJ70ZQTe6cqVKyGTyo9iQnWn2E35IK84IsP8
hRRSa/zCI2SVOMWAgViMdsJUHWGvgiIjl7GjjkGHUIItpouOjqbVwQirN2/e
zC5Dm9Bq+vTp0yvfJzjSU25BPcnfBaLV4aFu3bqqE9yGDx+uu2TS7dk2J1my
ZF6d//bt21OzqFYTQ3QhLWxOOANKIHXq1MqPjASkAuFnypQpla8jkJg2bdrM
mTObBKTQkGgok6V5UKTQrrNnz1aeGrN79+6tW7dCRefNm3fjxo3mdTSKGTEi
4CtC87Rq1SomJsY8EyWIGVEpVlNlzAiV5fKsR1COZaEqGHl0/JlA9jDGZ82a
pbJrn332WZEiRUy2rpo0aZLLs4BddP9wx9m/fz87+FJJ8eLFmajQfj4uz4qz
MWPGQJDg/7PEBg0aVKtWjQQYVt7lWVHLmvTBgwcvvfQSLJFWwt2euR8Qcoil
6rweThYuXEhleO2116BJEKeTMJw9e5bMHFwONrUYwhkaGlqmTBmvc7OVkJeO
Aa7qKTq1yqV5MzZ37lxKV56yxNPIbu525mzkQ4cO0Y2FCxceO3bs559/jsd9
++237Byojh07QrfTxTQJBOiaJM7ym0NToaClJ06cyBQyjAhGAcyTyX7UdoTE
Wsm9PpEzW3ZUK1SKaMm1wG8hjw6MHz9ee8GpU6fouwPEFd1NbgZDaFAICU/t
2rVV7YBeDgoKeuGFF6pXrw6dqdyxjYwy2pZOpWfUrFnT5fGOUE2e1nBkYLoD
pAD9Pzb92VzuJx8C4JOozD1UNPWy8kR1t4EmF7UmWoRkXrTMuvCLijlGpk2F
V01FMSOYPHkyS4QMFCxYEM146dIl5cW3bt2iAyYwopXpkZGRtG0IiVCOHDlo
Y5wWLVpYqztcI3iwSIRR8NoUDEdkmL+QQmpNSHj4rRKnGCghO6t9N8uA8aUN
oAC8X4jQdQXnz59Hd9evX9/1tJX55ptvWCN89NFH27dvX758OdqBxb9vv/12
jx49qHhOaRshPSnUBULV4QFBmepo1MaNG2u/Y7o9ER+93fXqFVAU7PJEzQhA
WDo1L0Ro8ODBtO0VJBZtmzFjxnXr1ulmtWHDBoy4pk2bUo2gSBs1agS9oQyZ
VdDEVJP92OG80Sg2IleuXF5Db6OY8ccff2T58H+YcD+ZcFuxYkW4Q25FzAiR
g+KCOaB0a1XQ9eiEMqEtmsErr7yydOnSo0ePouJvvPGG7ippJSQMjq/3tMaR
I0eYDiGgMZSrOKHHaNy5POe8fPjhh/fv34cDQ2fD4V5WWVj54OBgpGOM9+3b
d9iwYaVKlapSpYpqabAS+JBCE7aVoCOaNGlCBYNxVL5MhiiSdwqxDw8PxwDJ
nDkzlAD/K4v169c3a9aMlom5PPo8IiICbgbSoZDJtro87/8R8pw5c2bv3r3t
27cnY0rPff/99y9cuEC5eW1kN3c78zfyiBEjWPmzZMlCG2iTvsX1sEdQC/g/
GQh2GfQwKzaDp/zmQE2NHj2aXi/nzp0bPQJjDfu7aNEir/faERJrJff6RJ5s
6RwodCXPlwUTtmzZ0rNnzyJFirBnIU8IJ4yd6n0XOzSZuhKGT3m4s9Cg4BEe
uhLCz17U60JT45YsWcK2eHV5JgvBC0ImX331FTtWzOXR9roRMcPZgekOkAL0
29j0c3PBDjKd7PJ45r1794aUTps2DfLG0jH24QGyPHU1uQVrooVH5q2VWRd+
UTHHxLSpMNdUFDNWrly5ZMmSiCY+++wzFAm+E+5SrbsZNGgQmpdVFhWH28Z+
3bVrF3qB/YoQEr66yiHkrPvIkSOVD2rYsCGiAPPWcFCG+TuIU61ZEx5Oq8Qv
BgxEfC6Dqez79u2D5JtXioHWVr1SWLx4cbZs2dgFkCLEWfTJskSJEl9//fXd
u3cd1zY8etJaF/BUx2trE7QBqWrX4pCQkJUrV6quRAHy5s1LT0QYC42EltFm
iBAPJaczZAk0HeSNlmbDYtLXZNZoiB/btWunu0KWgfAQRULUgxZGaIwgxXzR
69q1a5G5kXu2bds21i9GoOtN8ieMYsY9e/awfEym+Gr5448/EGMiNkTrIS6D
eoGTiSEPlQV/TCnSFqqg9ehEMzl//jydmMkIDQ2dPHmy16loL774Ii5etmwZ
f1P4ml9//RUDcMGCBbpL3d2eNZg7duxQHh2O7t6/f7/yCxFGDeqO6GD37t3I
bc6cOb/88ovJQ2/evJkmTRqIh52Sw4VQvjpQAvmBZvjmm28g/zxnkvoar43s
5mhnoUbGgxBHrF69mr1kg45iuxb4ovzmPHr06MCBA8hh/vz5MGE87/EcERKh
kvM/0TxbeCMQP8ut7SP4BwWn8EA+4c/A18I/0LlwWmAr6RFDhw6lY860E2YS
Gv5XgAltbAb8cSpNLmpNTPCzIeARFR5MTBvhVVOxPXAQfezcuRNtCCfQfFNN
I6Crf/rpJ+QAv0VZNRVO1d2n8BTSD2qNcxB5FQMVdCSf8m2hU8CiIZyB1tq0
aRNttvaTB8cfpMRZPanEqeogEpk1a5YyBYNl+vTp1qbP8XDlyhWoMoxlxMuQ
W86t2uPi4rZv375kyZLDhw97vRjuGQJnoXmhzhIVFYXaIZZMnz696L0YyCdP
nly1alX//v1LliwJgXGkLxzx6GDUfv755++//3758uWcXxNgv1yeWbUJSosG
hAkTJvAfeyF5NvG/kEix5OfGjRsFCxY0WcAOLYcLLOyKLJFIzPGqqUz2TZWY
kKjV2p49e1KmTKnd+kkiSXTMnTtXNVVeCNW+qYmUwYMHJ0+e3NcvZxI+cXFx
+fPnnzlzZqALIkm4+F9IpFgKQXuvqdZOKrl3715wcHBC+MovkSQleDSVjBmt
kdjV2pdffpkmTRrtPHaJJBGBAViqVKkdO3ZYzgEj1PLslATC9evXM2TI0K9f
v0AXJDBERkYOGzZsy5Ytd+/e7dy5c0hIiO8OQJckUvwvJIlOLO/fv1+0aFHz
WfQSSRImU6ZMCdZj9x2imoqmUMqYUQjIFcnY0KFDdTfxiImJCQ8PN9+bNOC0
b9++WrVqTm3ZLZH4mb///rtx48ZeFzsnbR4/fty0adNmzZrxb8eUlGC7pREp
UqQw2bVJ8mzifyGRYmkZKDS2oUSBAgV69+49Z86c1atXr1mzZu7cuR9++GHu
3Ln79u0b6GJKJEkBC5qKNjwx2vNfokvSUGtwMlFyeJsybJQkOrZv3965c2eb
mwcmdqCI+vTp065dO5MJD0mb+/fvBwcHkyrOnDkzbYElkSjxv5BIsbTDgwcP
RowYQQdmqahUqZLqxHCJRGIZfk318OHDU6dOTZ06lbZefP755xctWiS03+wz
TpJRaz/++GOrVq2EdjiXSCQB5/r1623atFHtrfQMcuXKlYkTJ6IdfLejlCSx
438hkWJpk/j4+KioqBkzZnzxxRdjx45dvHhxdHR0oAslkSQ1ODVVTEzMFA1y
jbYoSUOtQRg4T3iRSCQJhEuXLgkdJS+RSCQSiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQi
kUgkEolEIpFIEhFxcXE//PDD0KFDZ86cefv27UAXRyKRSCQSiUQikUgkCYW7
d+9Wrlw5f/78OXPmdLlc+fLlu3z5cqALJZFIJBKJRCKRSCSSBMGAAQO2b9+O
fzx69CgiIgJhY69evQJdKIlEIpFIJBKJRCKRJAhOnDjB/n3v3r2UKVO+9957
ASyPRCKRSCQSiUQikUgSJvHx8alSpdq4cWOgCyKRSCQSiUQikUgkkgTHggUL
+vbtG+hSSCRiPH78ePPmzU2aNBk5cmSgyyJMoiv8qVOnIiIi6tSp40huqH50
dPTatWtPnz7tSIb8PHr06MCBA7o/oUg9e/bs37//9evXWeLZs2d79OgxYMCA
f/75x8FinDx5slevXm+++aYqffDgwRUqVIiMjHTwWc8OkKszZ86sWrXKb8vz
//zzzx07dkRFRd26dYvnepTw1Vdf3bNnj/YnE8k04f79+4cOHYIyOXfuHKX4
U4yTBkaDMbBZOUXiVSkQ4OHDh9euXRvlb9myJQYaz10QdW2iBYXglI32T/vL
UW8NUQWecDAxJb4jNjZ22rRpGTJkgFDh3/58tIP4dEgmQBMgefjw4bhx4woV
KuTy8OGHHwa6RAIkusKvW7euVq1ayZIlQ2lfeOEFO1nBue3YsWPFihXTp09P
1d+2bZtDxfROfHz8nDlzihQp8uKLL+pegJ+oVMWKFYMrTonFixenxJdeeokl
2mHNmjU1a9akPFUluXbtGqW/8sor9h/07HD06NFu3bqh0Zhc6fqNznLx4sU3
3njD9YSUKVNCtu/du2d+1+7du7NkyRIXF6dM9CqZuixbtqxu3bp58uTp0KHD
jBkzWJX9I8ZJA5PBGMCsHCTxqpStW7fmy5dv6tSpq1evZg07dOhQk1suXLjQ
sGHDb775Rpl4/vx5JM6cOZP/0Q7aaL+1/zM16s+cORMaGvqCMQifvWZiTYEn
HHRNia+BoWndunXq1KnRYs2aNfPno53Cd0MyYZoACXHkyBGEG4kl7FKRuAp/
8uTJc+fOYQjYjxn//fffLVu2QDlT3YOCguAtO1RMM2JjY6Hr8ufPbz6cs2XL
xizIkiVLKDEkJIQlLl682H5h0J5w76kwqpLAV6lcuTLSP//8c/sPenaAXG3a
tIl1U9GiRX39xMuXL+fNmxcCQx9BkidPTo+uX7+++Y29evWCZ8L+5JRMFXCD
w8LCMI6GDRumdQX9I8ZJA5PBGMCsHCSRqhQ0Zrp06SDe9Cc8+Zdffhm1SJUq
FWqke8tff/2Fa44ePapMhH9YokQJGFzRAjhlo/3W/s/UqO/Tp4/LFChV8xws
K/CEg8qU+JM//vgjX758aK7jx48HpAB28N2QTJgmQKIkc+bMiSLs0iUhF75f
v36qlE6dOtmPGcF///3HYsamTZvazI2Tw4cP79ixA/otV65cJsN5586d77//
/vDhw2FBJk+eTIl79+7t0qUL1AsSJ0yY4FSRWrdurVsSKDT4OU49xQ9oRSUg
3Lx5kzkMvXv39vXj6tSpA4eWTc6Bp0o2FCB6Nbrr8ePHwcHBygs4JVPJ7t27
s2bNmj59eqNv9P4U44DguMgZDcbAZuUUJiolgQxeLTANaEblJhtnzpypUqWK
ydCGzH/66aeqxK5du/bv399yMRyx0f5R6Ul+1DMePHiAWC937tzt2rWDAH/6
NKGhoXAwlBN0dbGmwBMOWlPiZ+bOnYu2Wrp0aaAKYAefDskEaAIkjLx58ybY
sMsrCbbwBw8e1H6p6dWrlyMx4/r165lvD7VjMzdRmjdvzjOc4ZBv3rxZm7hh
wwanSgJnJgkoFl1RCQjr1q1jcrVlyxafPgv5jxgxQpXIvkoMGTLE6MaffvoJ
3o7ut3VOyYyKikqXLh2cIp496/wgxv7HFyLn4GBMROM64QxeFfDk06RJg2YU
WquVNWvWadOmwZdWJubMmXPGjBmqRH4SrI02IUmOeiULFy4MDw+PiYnR/nT/
/n3U1OuuC5YVeMLBxJT4h+joaLTVrl27AlWABEsiMgHPIAhhEp1KZyTMwj98
+LBq1apagf/oo48ciRn/97//kWZOnjz533//bV6SI0eOHD9+3GgyEgHdxe8S
dO7c2etwhhosXrz4o0ePlIk7d+4sVqyYeUmEoHZI1IrFSFQCQo8ePUiuMmTI
YL42375cwVKrxMPtefGLR6MAkyZNMikkJFD3Jx7JvHDhAs1AM1/VRfhHjP2M
j0TOwcGYWMZ1ghq8Kk6cOEFj+dChQ/x3pUiRIlOmTBkzZixcuPCVK1coMVWq
VFmyZAkKCgoNDcWIFi1JwrTRJiTJUa+iT58+Dx480P1p+fLl6C/VglYtlhV4
wsHElPiHvXv35s6dO/Fug+M7EosJeDZJdCpdScIs/AcffKAr8E7FjLDd5A9U
qlTJ5LI9e/awRV7wk7t06QIdpXtlo0aN+J/evXt38+G8b9++UqVK/fbbb8rE
gwcPli1b9tixY/wP8koSUCxGohIQmLQ0adLE5DIfyRWRNWvW1KlTX7p0SfdX
eCkwslu3btX91atkglq1auGaIkWKeN33wG9i7Gd8JHLPYMyYoAavit27d9MI
PXz4MP9dr776KptpwHa8USayGZv8JEwbbYSPRv3vv//erVu30qVLp0mTBiF5
5cqV58yZY7esvqFFixYpU6a8ceOGtdvNFXjCwdyU+ALEhqNGjdq+fTv9ef/+
/bp1665evdpvBUhEJDQTcO7cuX79+r355pvwHxo2bPjll1/++++/2suOHz/e
p08fXFOuXLmaNWtGRESoFqsuX758ytP89NNP7NdNmzax9JUrV7L0kydPfvzx
x9WrV4cWaty48bx587y+vLL2IK/lJ1Qq/euvv9bNbcGCBSx97dq12nx46rV0
6VK4oxUqVECzf/HFF/hTtYQ2Pj6+a9euYWFhnDNqTOyR1/KcP39+wIABb731
Fv25cePG8PBwlK1jx44XLlzQfZxXybl9+3a7du3IvObMmZOaC01Kv6pixhUr
VsCpxhM7dep08eJFnvq6Pd3KLPjw4cONLrt161aePHkmTZqEnI8cOTJu3DgY
LNwCgwhnQDkp5eeff0ZdOJ/u9jacYV4RRKh2Zd+/fz/8q7/++ov/KVpgxUaO
HPnaa6+hIg0aNPj++++NSoLR0bp16zFjxqjSOUfEn3/+OWzYsNq1a7PCt23b
tmLFihBd5TQSekr58uVRGKNZjiZCaC4qXm8nIKiDBg3CT/j31atXO3ToULVq
Va+viBmQjQkTJvTu3RuWSylXJjn4Tq7cnm3tkRU0g9EFMLhoKyOF6dXQ0Ct0
nrfovhNjgHB1/vz5zZs3x9iHroNKQZ5QthAnusCaEv7nn39Gjx5dv359iDek
d/DgwSo95ojIEfyD0StCWfEUT1Sxe7VKbo1KMWnJRYsWqYz1r7/+yvJBKMfS
caVoW3ntYrdn2iEyh3Kj4kG66HHayZZaoARoKikqhWakRARQ8K6RmD17duVe
ytYcDEK0j4xUutuzb8+IESPq1auH22GaEdXq7m7K03S+GPUoTM+ePREnPv/8
86lSpUJT4N/4f/r06S28UvM1KG2GDBlef/11a7d7VeDm8HjmTllnXVNiIkv2
n3v9+nWa4oJf33vvvXfeeYfFj3bAUPr0008/++wzt2cju6FDh7766qvQkAMH
DjQJ/O27FiZD0s033BgOWhNfALObOnVq6LcHDx48evQIfk6yZMkwiml74dDQ
UFyAy5CeMmVK6DS0bXR0NDrF5dlwTKl4T58+DU3IHC2YAGUfXbt2bdasWUhv
06YN07Ro4Xz58sG4oMHhrQUFBeECdJxu0GrnQTzlJ1QqHTnMnTuXlBs6kV2G
TCBXlK49NoWnXmjzokWLwpO8efMmlDMUJq5RbVrFnDrzL2hGhecsD6JsCDNt
81WwYEEEqiiGS0FISAi8AlWePJIzffp0GJ2XXnoJmWTKlKmLhx49elAOLGbE
8KQnsq1sUNo7d+7wVBlVY+U0mXeEziI1ouTAgQN4bnoPcFkRciJchScgtCde
QIbzzp07UU5oLXQolM/UqVNh2sj4spKgH+EaUeNrpYJnRCBzuC7UKVmzZkUK
mgjX4N+UZ4oUKdavX490uh1uAKVDEpS+PWEuhOai4vX2yMhIaFcmw1AC7Nsf
CmOinwkI8JAhQ1A1yC1UdNOmTRH0Mbli09K0+E6uADRY165dTS7Ar927dzf6
1atk0lZv6DW0Ieo4e/ZsGNZRo0ZBHQmV0w5oE5SwTJkyUBfoWYgBevm5555z
eTbzp2ssKOFly5ZBQhDI7NmzB49AvXAZaor82TU2RY7BMxg5EcrKa/EsKHZz
q2SkUkxaEmMBRaLr06VLh3GqVOww3JMmTcJPEEXV9qRe4elit2dPHnizaAcq
A3zvth68boNJwLrBrNy9e1eZeO/ePTjJSjGw7GAI9ZG5Snd7InS0f9++fVE8
yBK1PK6Hh2+h6RwHEUeRIkXgNsCCwCum4wsXL16MMqOcadKkeffdd81zQPWD
RGDbvVoDVgwFgz9p7XavCtwEr/4Ves1B66w1JUaytGLFCqeeGxMTc8CD/ReP
YNWqVWwowewiT6gy5VAKDg7WPbzbjmsB22Q+JN2Cw81Ba+ILUCr0L0qiXGVD
Lwzh7YwfP/7LL7884QGXIVG5WKxatWpIqVKliipP6GRqPZWadXtOR8qdOzd7
U/HVV19BzNjrO7dnIgQ9CGPNa+H5HyRUft2wiy5WuivKdJW7wlMvDBPX07tp
0WIQVcx4+PBhklX2yt0c3cJ7Lc9RD3QvhgP0dp8+fc6dOxcXFwfDSo08evRo
ZZ6ckkPpRr4rxYywiSgGHG/0DhoBpaUnTpw4kafKzCHJkyePyWVQucoWUAL5
mTNnDpRMWFhY+/btf//9d57nMvwfMx4/fhyNDDdb+QKZbQTESoKugY5avXq1
VptxjojjHkgfQoQGDRo0dOhQMvTwKmmlRtmyZSEtaLc//vjD7Zl0RFOFVVth
cA52o8bkkWFo4wIFCpBiR9AHRY0wEKYtb968upsbMCB1kHncmDZt2lOnTrk9
GyoyQ1O6dGmTe30kV//991+3bt0QOmEUGM0aRbFz5MgBE2OUiblkor+oguXL
l4cLjV6D/smSJQslQuEYLfBxEPQajGndunWVa1guX75MosViRoJfCW/YsAFq
s0OHDsrLEF1S1VSz4CyLHME5GHkQyoqneKKK3atVMlEpbuOWhMaAt4afMBK1
tUYF0Vmih58KdbHbY7DoJ6G5qZzYcTCE+si8/eHkw4mF5WUpCGDpSji9LFG0
6RwEbQJvOV26dGPHjlWmszMN8RPZFyPgRUeKcPXqVTsFbtWqFQp88+ZN0Rt5
FLgJPP4VTYZxxDprTYmJLMHjcuq5zrJjxw60Cb1vhAMAYWvZsuXChQvRBTS+
yJqrNvmx6VrAypsMSbfgcHPQmvgI2F+URLXuddeuXVRCNrX422+/pRQMBHZZ
//79XU/eMyiJioqii9FZqp/gmbB38tCuadKk0W68UKNGDZdnMxMjT0z0QaLl
1w274JDouiuUrnRXOOs1cuRIl+cLqfKajRs3ag/HgR1HBTkPz9UWnr+d0WhI
wYhTzfIqUaKES3PGEKfkEOYxI3QyvZVSPTE8PNxrfW/fvs0+Tb7//vter/cF
fo4ZYUQqVaqEJ2qPRaBPY9qS0HszpVQIjYiePXtSNylngLs9nyQoE9XrMhb1
s5eH/EKo25j8t0MGXJ73nOwjwrVr17TvlFTQOiyXYh8Y+GyuJ2g32/cpp0+f
HjBgAB2TQaC7dZ0WeER58uTRbrzAMJdM5pEWKVJk1apV5JxAz9AJOC7Pq1qn
KqULXCm4EJAr7Wfct956y6WJGTmV8L1792g+ITpRdSVpLXg1ys8udkTOwmA0
QigrIevJr9j5rZJWpbhN5Y35SNqlvvCERQ+wE+1it49jRvsOhpDxdeu1P0QC
3iaiTqVCgFDR0R45c+akFAtN5xSQLvpcgkKqfho1ahTZcVQh4SxsfPDgAQos
Kpz8CtwEfv/KvnV2a0wJjyw58lxfgHCVxBijkiXCDSCxB9999x1Ld9C10FWJ
QsPNQWviO2j36T59+igT79y5Q23LDiE6c+YMFB2bbE+MHj3a5ZlOoM0WYbJL
84YNo0bZPmPHjsU1U6ZM2fM05AAAmhNrDs+DRMtvM2bkrBekFP8uUKAAysbu
jY+Pt7m/lrbw/O1MFr9gwYKqPFu2bOnyvDhSJnJKjjJn/j1w6CCtypUre63v
kiVLmGbWTrfwD36OGeFUuDx7rWh/Im9fWxI6JUopFUIjgmaYaJ2f2bNnU8ur
DCIMEKWzyWaiQqiqAv/tdHoL7LVJJKWCHagBpcFmzVEjE1FRUZxZOcLt27cP
HToEx4nMFqG7EBJWDNGuSVbmksl2hVUtM3n48CGZXZePTxih07jq1q2r/Yl2
fLUWM86cORN/hoaGarNdsWIF1WvQoEEs0Y7IWRiMRghlJWQ9+RU7v1XSqhS3
qbwhE5rQpdpO6tatW1A4ohtfiHax28cxo30HQ8j4uvXan/oOnrzqys2bNyMg
Xb58Of1poekcgRYGujwzFbXbDuDR5HIjckT86PjTrbFq1SqX+IdXfgVuAr9/
Zd86uzWmhEeWHHmuL6hatapWz7g9X06pALQmkXDQtdBViULDzUFr4jtoJYjq
LSKiXarLxx9/rHvXxYsXIVQhISG4JnXq1NoLaDmh6+n1ZRMmTHjnnXfYnw0a
NCBD39YAnqNFeR4kWn6bMSNnvXbu3Eklh3JAOzt1GKi28PztTEtEtWaL/LeX
X35ZmSgkOaIxI83BKFWqlNf60utZ6kfz+YeMuLg4r+do8Eccbr/HjDSLEvaI
vyQ0rcJkpz7zETFkyBBd67B48WJqfNVhx8w9Y8vi+IVQtwr8t5NEaWXYCAgD
LqbSKhey0Y6jIEuWLJzC4LhcuT2radKlS0clUe4c4vY44egR83jWXDKhJCln
7f6H33//Pf3Uvn17oQILQcpT18p06dLFZTVmRBCKP8PCwrTZQkXQVP/y5cuz
RDsiZ2EwGiGUlZD15Ffs/FZJV6WYV3natGkuzwogpbwhGoXaET2yQbSL3T6O
GVVYcDCEjK9br/2rVKni4ljQYaHpHAHGgj4y4v/aWfosZvT6nfHGjRu/i8C5
K4IurVu3fu6558znyppjosDN4fev7FtnrSnhkSX7z/URFDNqJ8nExsZCulye
vTJYooOuha5KFBpuDloT30GyoXLOMSqpc7XLh3fv3o0gvXjx4gjMBw4cqKsS
3Z53SrQeVinzqK/ykyvUIC6wuVESz4NEy28zZuSv1yeffOJ6Amx0RESEapRZ
QFt4/vIYmS1d/01IckRjRtoEQGsoVUCF5siRg57Is7PZlStXoCJSpEjx/PPP
oytnzpxpZFCaNm3K7977eThTF6veaZuXhMIi3ZiRZ0RYtg4HDhygFH4h1K0C
/+2iMSN76aS0ZQ8ePMiePTsltmzZ0msmPpIr4uuvv6aSqL71bNiwAU6peZRq
Lpk0/xNop6LdvXuXFnT4wntk0OaTup8V7MSMpBOqV6+u+1AaC1myZGEpdkTO
wmB0JCsh6ymk2Dmtkq5KMa8yhhVN2FOOKWgek82ujRDtYre/YkbLDoZQH7n1
2p/axOs8JQtN5wg1a9ZkQqX9FeEJGsrliShhVkzyoQ9D/PBMV9OFJqZqtzcU
xUiBm8PvX9m3zlpTwiNL9p/rI4xiRveTU3LSpk3LUhx0LXRVotBwc9Ca+A42
L0s5J/m7775DSsmSJZVrRa9duxYeHp45c+Z58+aRdNHg1Y0Z3U9MD/QDfaHe
unVrsWLFlBfQktjZs2fbrILXB4mW32bMKFSv1atXs88cLs/e3SY7WvCgLTx/
eYTMFr/kuK3GjFpDqWLfvn2s6byekxUbGwtT3qZNm+XLlyNSePfdd9N6wLNU
u61euHChVq1a5rkp8fNwJttar149/pLoajP+EWHfOvALoW4V+G8XjRkRE1FR
le8e2dorl95aaRW+kyuWP60iUa25aN++fe/evc3vNZdMdjiC7jYRRYoUwU+o
mmiB+aGwdNiwYdqf7MSMtE1fmTJldB9aoUIF/BoUFMRS7IichcHoSFZCVkY0
HuGxShZiRveTPa7R77Qzxq5du1KlSmVhlxLRLnb7Pma06WDYjxnpGwrcIfNy
Wmg6R2DbDuhuVdetWzf6FZrTXB4ePnx4XwTRd3QM2tVk/vz51m5nGClwc/j9
K/vWWWtKeGQpMcaMNLUmXbp0LMVB10JXJQoNNwetiU/5+uuvUa+8efNu3rz5
xo0ba9asgY2AK6U8lAf/hqJDXKY82tU8Zjx//jx9eB0/frzb84Jd5dVD8vFr
q1atdG+H1uXctc/rg0TLbzNmFK1XXFzc9OnT2YrpDBky8B9NqEVbeP7yiJot
HskhfBQzDh48mDk20dHR5hevXLlStXXVnTt3pk2bRu1TsWJFyAOqMHXqVKgR
aGzz3JT4eTjTXBddZ54/ZhQaEfatA78Q6laB/3ahmPHPP/9k8sO2moRPUqxY
MUqEYvnnn3/MM/GdXDFgRJAV8mQpUBqZMmXSbieiwlwy2SE1uifU0IvumjVr
WigwJ7Rmp1OnTtqf7MSMtEUnFKnuR1jyKJR74doROQuD0QihrISsjKhid3NY
JWsx4927d8l/pnlBLVu2NF9FYoRoF7t9HDPadzDsx4w0FVa7TSsRExNDB3ZY
aDr7oM1p6qlR5nSmrYtvEwP/AIuAvrMztZWhVeA8cPpXNq2zrinhkaXEGDPS
6mDl3q0Ouha6KlFouDloTXzKlStXwsLCRowYATXeokWLiIgICKfq5QyaFAV+
7733lInmMaP7ydwntCR8M1gK1ehr1qyZy7MgWruhkNvzmmXevHmcVTB/kGj5
dVU6neuh/UygjRk567Vx40bl6U74N8kzwGDkq7cO2sLzt7Oo2eKRHMJHMWO5
cuWoxXS/LKsYPny40YKCqKiozp07FypUKFWqVBiwy5Yt85qbEj8PZ5pNgXBG
u/8Yf8woNCLsWwd+IdStAv/tQjEje5cLIMaUiOCODgsDr7zyitdMfCdXDNJv
yqesXbtWd1m9CnPJPHr0KFVz5syZ2l8R7bp8vGds4cKFXZ4dV7T2VFfncCrh
xo0bU710Y2EaPsr36nZEzsJgNEIoKyHrya/Y+a2StZjR/eRFH0YEegeqZuvW
rSYXGyHaxW4fx4z2HQz7MSMFJsmSJWNHXCkZNWoUHQ5roensg/Anbdq09Fxt
zHj16lX6NeFsmhobG4sgt1GjRo7kplXgPHD6Vzats64p4ZGlxBgz0urCdu3a
sRQHXQtdlSg03By0Jr7j2rVrMNlejz3NkyePS7ONEqlEKH+ju9hGSTVq1FBt
GuxWTACrVKmS6ojkmJgYhP/8Gz6bP0i0/LoqnUwnghTVxbQ1Vp06dUTrhXG3
dOlS5a/QBhQEwUxwVlyLtvD87Sxktjglh6AdGuEiqtLtxIwwNNBpVDXk4/Zs
3KE6n9o/+Hk4s72sBw4cqFsS7U7mWm0mNCLsWwd+IdQVFf7bhWJG5WLGcePG
IeXYsWOwNbS/H6CVVrt27eLJzUc8fPgwODhY9fq9TZs2XiehuTkkk8yr1jVC
EJclSxYYL+X+mY7ToUMHamfl5ucEzZtVaQBOJQy9qlQLSuLj49OkSaPahsWO
yFkYjEYIZSVkPfkVO79V0nWQjPS8khs3btDr9Fy5chUpUsTkShNEu9jt45jR
voNhP2acPHkyVbBWrVqqPYVOnz7NRo2FprMP227LpbctJBqKYkbHv29aBtGZ
i2NhAg+6Ctwr/P6VTeusa0p4ZCmBx4zaVYFQZbS6EPECS3TQtdBViULDzUFr
4jvozJGRI0eiZe7du2c095t2ycb/2fFDx48fp6AYxMbGIkhHivZGNstL+44F
d1G25NUsW7YMXRYXF7djx47y5cuLxk0mDxItP+l/5SaKYNCgQS7P8UnsDQB6
vFevXrRXRokSJUTrBesMKVW9YKcjb5TnqD548KB169YVK1bk3PBfW3j+dqY1
BVqxJCFReZ6ckkPQmlO4CnRy95YtW6i1yVCGhISoridn0jwKUy46g4aHIkL5
zZrGZ1BTQMPbyQQ9Au2dM2fOVq1amW8AGx0dTZPk4Y1s3ryZpaMLXn/9dZfn
ba1Kz9Mu0EqpEBoRtKt2pkyZVCWh5RVAtb8iO0aKzXjhF0JdUeG/nbSu7pIZ
LfPnz2ciBOswadKk4sWLM5MHfv75Z1ht5UmvvgMdgepoX3pMmDAhderUSrVG
mzPw7D7nVTIxaiBFKVKkOHnypDJ906ZNuNH8IA9d+MUY7N+/n177oLtXrFjB
0iFX9KlX5SpzKmEMBHhoLs+MINXJj7R5vup7kB2RszAYjRDKSsh68it2Tqvk
1lMpRi2prWnv3r2p5JBtnpbRItrF7ici7Xp6gZhT2HcwhIyvW6/979y5g3FH
T4TDTOfKQWBWrlyJJ7LPJRaazj5MVl2aFYv4N21jiEJaWNnqI9AIGIyqIELJ
tm3b0IydO3dmSwv5FTgP/P6VHetsZEp4ZMm+V+AVIWvCoJhRO2RoWpFqV1IH
XQtdlSg03By0Jr6jdu3arqdBaYOCgl544YXq1avDTKD13Iozr8uWLTtmzBhU
s1y5ciyxQYMG1apV0/3EQ+d4Gs2Lhs/AXukrgedmMlp1MX8Qf/lv3LhBi7VV
p4YdOnSILi5cuPDYsWM///xzFPLbb79lx7h07NiRzePiqResM1K6du3KdA7G
L3wkCJ6yJdkA5JkmZ1R4znam1/VQ6arhWatWLZfHE1AeWMwpOcTChQvpmtde
ew0+HjIkHUgDAcNEdeo67bGGJ0JbGlVWub9fw4YNkbOyeP6EtZvXs+NN+PHH
H1l1vL4w+eabb1ibf/TRR9u3b1++fDmanWm/t99+G7qLGvnWrVu0cTe6jOUg
NKLpLTHce5UVoFOcXJo3h3TunuvpPes4hdBIVDhvp+mLQNdZVXHs2DFlVsmT
J1+7di3b5g5UqFABjaba0MlHUCOjjoMHDybfCe2PFoZNV62ChOHm/JDKI5l0
gBRqyq6Bl4L8X3311fv374vWQkiM3U9e3hLwsZs0aYLQDx6C7vmM/Er47Nmz
5PMgAvr777/pdvjtoaGhZcqUUS1esClyQoPRHKGs+K0nv2LntEq6KsWkJVXA
d4IXDbUvetC5EqEuBrSLKYC6s/xQI+w7GELG16j9IyMjaRsNl0dd58iRgzYz
adGihfIy0aazCUpLpULFs2TJQiP98OHDSN+wYQNEC+kIG/1wBgonNDFVeYqf
FrYAE54/pfArcB74/Ss71tnElHiVJUe8AnNErQlBMaPr6X0RUUjUFMJ26dIl
1fWOuBZGQ9ItONwctCY+4syZM+xtmC70hRdNR7qLBv6HH34IdwJN99xzz7k8
/oZ22xMCN6I7TD7xHzlyhPYOYtSvX581LD/mD+Is/8iRI0uVKsVKAiGBQ8Iy
GTFiBJsMCdVHL8bJXUGsikfTy1XOesE6BwcHowDwf/r27Tts2DA8GvlAwJQl
Z6/iVftsaDEvvHl5li5dCm+N/QTD17t3b7gN06ZNa9SoEUuHHYSfRrdwSg7x
8OFDlj9GNHyGJUuWUMBIwC2Bj4EGROzPjgBwebYQoa2NtKxfv572PnJ5durw
uleJ48DhweDFcGalLVKkCHxda7Zvz549LJ/s2bN7vX7x4sXZsmVjt0ClQ7fQ
BAZ43Qh8KAQYNGiQUirQm9DDbu4RgUZu1qwZE3to0YiICGg5pLdp04aUpMvz
8q179+4Qib1797Zv356Mi8uzIdj7779/4cIFKjPPYNeKCvvJ/HYMQPzJfsII
RQTBHm0ESkvXw1ujGZJRUVGsviiJnfcAQkDyaR9R1nRQaO3atdOus4DVVp7p
rEVUMn/44YdcuXIVKFAA2aJ/8+bNC3fX5HWNCaJi/PjxY0R5bE9F/KNfv34w
iEZT8viVMNqNNAxaMjw8HJKfOXNmNIv2fbVlkWNwDkYehLLyWjxRxc5jlYxU
inlLqkDXtG3blrNNjODs4hkzZkCJMWMBrYWYDrVzcN61HQdDtI9M2t/t+ZpD
y4QJuP0YX9pvE/yjwz7we2naAP7fsmVL+jeUGzoiTZo0MBaVK1dOOF8Y3U+O
Vl+0aJHJNXSUHvqaRRD8CpwHHv/KvnVGGIWfjMpgJEvOegUmiFoTgmJGCFXJ
kiXr1q372WefYTxCkULgjbaXtOlamA9Jt+Bwc9Ca+ALUBS0MhYZ/HDhwIDIy
cuXKlSgzot2hQ4fS1nnsq/rRo0d37NihdM5xF4Ia8zPCNmzY4HUHVDwC/bJg
wQLdJbeceH2QtfIrQfFmz569evVq9tIPw4SWlutiUi8oSdgFFHj37t24Zs6c
Ob/88otuJgcPHkSEpfxsZxlH2pkQkhwCjsepU6dsPlcJ8ofN3blzJ38PJmQQ
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
Tx9ZT91znUaOQYPHqalOySP17KljUMtZb2M1MxY1vmKePVW57f7775fyHd5+
YGqcb3VyTjG+e3i29oxzNrBHD4zD2WK7PfXMmTPajzCAsdhdgXUd6XhFVlaW
3GzWoUMHbboE7BhB6UYs7du3l6NA+0ZO1w4cOCBTNOs0btxYG/jLnGYW2yuu
pk6diqpDjK8SO3Xq1LZtW/WwgFybBu3epeBEKZ8+/vjj2JGwzvKDqgxCMETR
XeZo166dbJSR57kEdjCLbaIM1ZNnZ2c3adIE4xlTTyTJhFGATdZ95KxpDNYn
4PyIUTE+6tixo67wBQsWyLewiDfffHPXrl3ypgN1fD3zzDM4To3PcYe11T47
bDHwkikcMupYXr169eLFi8PDwzHmMb5rFTV1FDi8LmZwHzDeXomJiWrIh3N3
jRo1ZMqFF198UZvt888/V4W43cm70V5yOrM4ei/2qlWr5CN02m782lB4GB7I
ru4Mxr26Fdu6dSu+oiZyRNt16dIFnYM2crF6qZUL08Rmu+7Dhw/Lgho0aDBt
2rSJEydinRcuXKjeYNWvXz+MyiSziy7FxUeumeqLnPWKBpvJ2anB+NnHbPUa
PKiN7z/OIH6RSfkUhLfp6emnT58+dOjQmjVrMEyVx/GEwxnGpE9Ai2OwdPbs
WZlh2P5asxe57pOtmlPqww8/jPAH3VpCQsJTTz2FIaJH5mQ22KDw7LPPSh5d
zCJvgrPYXU9UP+Jp7+JQP6tiSFn4lXcB+608X1DgguRnE4tt0K59KZKRY9Dg
cWqqU/JIPVs9cQzqOOttrCbHogZXzOOnKvfMmjXL4vyZX1PjfGfnFFO7h2dr
zyAXA/sTJ07I704IUdWsC4iUAwICmjdvrvs13nWkU/wQrQcHB6s6xJAJYxV0
sxERESoRLTtixAhU4+zZs5FBpaOh0VIGF3T06FGZEUhBdKCbpALNJ6ddi+3V
aTjBXb16FRWFfslim6dLOnwchviuKqdatWrYPdT8jQKDQ7UJYWFhiE1wxpSD
VGBPwCGck5OD3VvN22mxPbAvT+8WCDuYn58f1g077ahRoyZMmICaxGGC/cFg
ncybN+/555+XR4YttvESDh8UJS8ldNg0puozLi5OWwL2PRxT2gwI09T9hBbb
S8wxVJM7f4KCgubMmWPwBsLNmzf36tVLN1yBe+65p0+fPi4iETVWfPvttyUF
u1mPHj0MVmDROXfuHMaoGLWqbWnYsGFUVJTuCprxfcBIe4mvv/4apalsGJyg
69MFO/v371cZEKOZ3Tq32wt9rORUvbEib9mzOLl4UdR27twp0/K44HBKJYSH
GEVjVPbqq68iQsGo0v7NaF5pZfea2O2ue9KkSaoC0aOuX7/eeuOSE7YUXa78
Tu6iSymwt3HNYF/kolc02Ez2pwZJN3L2cbt6jRzUVjP7j0My2jRI+9Jw5fjx
4/IpRm6IKDF6kQFb8b801p7BPtlqi53lBawKBmMzZszw4HW6Aht0y5YtOLmr
Ywo9J/of1CfSe/bsKT96WGyXDwYOHIgz/jfffIO+V2JPi23iRPRIMqqRrhUN
UaSDRuyx/v7+snQELJGRkVhV+2xbt27Frq4GLRbbuAUjKHk4y8gxaLw7NdIp
ebCeRSGPQR2HvY17Y1EjK1YUpyo3yHs8nb0K1uA431rQOcXgOasoas811wN7
gQhR9gHsgTjWcEz5+vqif9P+Dmkk0vnPO3LkCOph+fLlDp8fFxiyJiUlZWRk
qBRU74EDB9y4pQ1t/euvv7q5rgU5e/YszkHZ2dnJycnYqMWLFx86dKiIluWM
kfp0DUcrzgKLFi3avn27zB+1x8ajq+mUehwYp2CV6PFZNIuO2X3AYHtdv34d
TYDS1q1bpz0QtPbt24cRbEJCAk5/hdoGM+TGD4vdLDdZWVk+Pj4W291Bzla4
xMrNzd21axfO485uqfVWKxdzE2Nt0Q/Ex8ery2QYdxXFtEvOFLIvMtVMzk4N
Hjz76Bg5qEXhe3W3ITaUA1zeP6gudv/+++/FvCaFhD1h7969n3322RdffFFE
oZbxBi0kHBerV68uziPRbUaOQVPHqbc6Jc8egx4ciLpesSI6VbkBPbnr+Vc9
0tOa3T08W3uFh34Vh/aCBQs2bdqEQVSRLovoZpeTkyM/9yHQsP/JfdmyZV5Z
q5vLkiVLdHfoFSn1nIL2MRCYMGGCpBdyyjWyV8xNTKUZ9jSL7UkB6ZB79+6N
PwMDA729XkRERFR6qfm1dG9Yvn79+jvvvGNqGo3SCUF3cHBwUlJSsS1RngfX
xYynTp2ShwVef/31YluTUqL4m5hKrYsXL8rtYTLhQ35+vjx0Ex0d7ZErrURE
RERu6NmzpwQgkydPlhSMkBMSEh588EEkFv+NvjeX9PT0bt26mXpkrPBSU1Pl
0rB6acX58+dl2gQEjF6Z+uY/zCtNTKXW+vXrpUOWG7d+/vln+XPo0KHvvfee
t9eOiIiISp3du3cPGTJEPb/s4+PTokWLoKAgeSYOgoODvb2OJdquXbuioqK8
Mo/W/v3769SpU758+UGDBo0ePRr/R8N98cUXxb8m/21ebGIqnfr372/RTP5/
5syZqlWrli1bdvDgwcZnzyYiIiIistrmgjt48GBCQsKXX36Zmprq7dUhoiJx
+fJlzsxARERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERU
GuTn5+/YsSMiIiIuLs7b6+LA2LFjW7VqlZiY6O0VISIiIiIiKl3y8vLef//9
++67z2IzdOhQb6+RXlpamqzbww8/7O11ISIiIiIiKnWOHj26c+fOEhszIqoN
DQ3Fuk2cONHb60JERERERFRK+fr6lsyY0WoLG9PS0ry9FkRERERERKWXv79/
iY0ZiYiIiIiIyLvq1KnDmJGIiIiIiIgcYsxIRERERERUepw6derdd98dP348
/v/vv//GxsY+8sgjjz766JgxYzIzM+3zO4sZjx07NnLkyPbt27do0aJdu3bD
hw9HisPFvfPOO127dpU/t23bFhkZ2apVq379+p0+fbowmWHPnj0vv/zy1KlT
C1OISElJGT169NNPP40t6ty58/Tp01E5zjI7ZLBi58yZM/OGDRs2qPTly5er
9E2bNmlLxmrHxMR069YN/z979mzfvn3DwsIWLFhgarlaGRkZU6ZMCQ8PR9t1
6NBh7Nixzmpm7dq1ERERqD3UyXvvvYc/Hc449Msvv0RHR2OhISEhWM+lS5fm
5eW5VxQREREREXnLxo0bESaULVsWMeALL7zw999/BwYGWjT8/PyOHz+u+5bD
mHH+/PnlypVDXIZg4eTJk4hZkKd8+fI7duxQebZv364WV79+/WvXriFq0y6u
Vq1a58+fdyMzPkVg1aRJE92crqYK0UK8duuttyLszc7Ovn79OrauTJkyt99+
ex2bgIAAZPBUxZ44cWLJkiWoK6Q//vjjqhBUI0ItSUfoKomJiYmdOnVSW5SW
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
jIycMmWKkdK8VbFsUCIiIiIiKoz/ATEHuPU=
    "], {{0, 168}, {1212, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1212, 168},
  PlotRange->{{0, 1212}, {0, 168}}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculation of the mass and moment of inertia of the suspended bar magnet.\
\>", "Subsubsection",
 CellChangeTimes->{{3.537282118686576*^9, 3.537282133924447*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mmag", " ", "=", " ", 
   RowBox[{"\[Pi]", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["3", "16"], "*", "0.0254", "*", 
       FractionBox["1", "2"]}], ")"}], "2"], 
    RowBox[{"(", 
     RowBox[{"1", "*", "0.0254"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"7.3", "*", "1000"}], ")"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"Mass", " ", "in", " ", "kg"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"i", " ", "=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{"m", " ", 
     SuperscriptBox["l", "2"]}], "12"], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", "mmag"}], ",", " ", 
     RowBox[{"l", "->", 
      RowBox[{"(", 
       RowBox[{"1", "*", "0.0254"}], ")"}]}]}], "}"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Moment", " ", "of", " ", "inerita", " ", "of", " ", "the", " ", 
     "suspended", " ", "bar", " ", "magnet", " ", "in", " ", "MKS"}], 
    "*)"}]}]}]}], "Input",
 CellChangeTimes->{
  3.5372807958409133`*^9, {3.5372808275967293`*^9, 3.5372808301998787`*^9}, {
   3.5372808665479574`*^9, 3.537281020529765*^9}, {3.5372820714848757`*^9, 
   3.537282086195717*^9}, {3.53728214061983*^9, 3.5372821422209215`*^9}}],

Cell[BoxData["0.003303059792845008`"], "Output",
 CellChangeTimes->{3.537281021054795*^9}],

Cell[BoxData["0.00016129`"], "Output",
 CellChangeTimes->{3.537281021054795*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{688, 563},
WindowMargins->{{-2, Automatic}, {Automatic, 6}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 161, 2, 83, "Title"],
Cell[743, 26, 250, 6, 78, "Subtitle"],
Cell[CellGroupData[{
Cell[1018, 36, 267, 5, 71, "Section"],
Cell[CellGroupData[{
Cell[1310, 45, 203, 4, 36, "Subsection"],
Cell[1516, 51, 886, 28, 48, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2439, 84, 198, 4, 36, "Subsection"],
Cell[2640, 90, 596, 15, 65, "Text"],
Cell[3239, 107, 266, 5, 47, "Text"],
Cell[3508, 114, 1069, 26, 85, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4626, 146, 132, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[4783, 152, 158, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[4966, 158, 324, 8, 31, "Input"],
Cell[5293, 168, 272, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5602, 180, 323, 8, 31, "Input"],
Cell[5928, 190, 270, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6235, 202, 326, 8, 31, "Input"],
Cell[6564, 212, 324, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6925, 226, 326, 8, 31, "Input"],
Cell[7254, 236, 393, 11, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7696, 253, 106, 1, 36, "Subsection"],
Cell[7805, 256, 157, 3, 29, "Text"],
Cell[7965, 261, 630, 21, 33, "Input"],
Cell[8598, 284, 316, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[8939, 296, 659, 16, 45, "Input"],
Cell[9601, 314, 884, 26, 47, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10546, 347, 131, 2, 71, "Section"],
Cell[10680, 351, 239, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[10944, 360, 104, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[11073, 365, 2219, 54, 235, "Input"],
Cell[13295, 421, 360, 7, 30, "Output"],
Cell[13658, 430, 362, 7, 30, "Output"],
Cell[14023, 439, 482, 12, 47, "Output"],
Cell[14508, 453, 551, 12, 38, "Print"]
}, Open  ]],
Cell[15074, 468, 638, 12, 99, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15749, 485, 105, 1, 36, "Subsection"],
Cell[15857, 488, 1017, 31, 65, "Text"],
Cell[16877, 521, 9789, 165, 73, "Input"],
Cell[26669, 688, 331, 6, 47, "Text"],
Cell[27003, 696, 844, 15, 135, "Text"],
Cell[CellGroupData[{
Cell[27872, 715, 4757, 115, 561, "Input"],
Cell[32632, 832, 614, 13, 33, "Output"],
Cell[33249, 847, 560, 12, 33, "Output"],
Cell[CellGroupData[{
Cell[33834, 863, 1271, 34, 100, "Print"],
Cell[35108, 899, 505, 10, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35662, 915, 144, 3, 27, "Subsubsection"],
Cell[35809, 920, 45233, 746, 86, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81079, 1671, 173, 3, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[81277, 1678, 1216, 34, 108, "Input"],
Cell[82496, 1714, 90, 1, 30, "Output"],
Cell[82589, 1717, 80, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
